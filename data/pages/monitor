<html>
<head>
<title>Video conference unit monitoring</title>
<script language="javascript" type="text/javascript" src="jquery.js"></script>
<script language="javascript" type="text/javascript" src="jquery.flot.js"></script>
<script language="javascript" type="text/javascript" src="jquery.flot.time.js"></script>
<link rel="stylesheet" type="text/css" href="jquery.datetimepicker.css"/ >
<script language="javascript" type="text/javascript" src="jquery.datetimepicker.js"></script>
<script language="javascript" type="text/javascript" src="highcharts.js"></script>

<script type="text/javascript">


	$(function() {
	    var popupStatus = 0;
    
        function loadPopup(){
            if(popupStatus==0){
                $("#backgroundPopup").css({
                    "opacity": "0.5"
                });
                $("#backgroundPopup").fadeIn("slow");
                $("#popupContact").fadeIn("slow");
                var brd = [];
                var count = 0;
                $.post('api',{ data: ['adates'] }, function( data ) {
                    $.each ( data, function ( key, val ) {
                        brd.push(val);
                        count++;
                    });
                    $('#datetimepickerstart').datetimepicker({minDate: new Date(brd[0]), maxDate: new Date(brd[count-1])});
                    $('#datetimepickerend').datetimepicker({minDate: new Date(brd[0]), maxDate: new Date(brd[count-1])});
                });
                $('#datetimepickerstart').val('');
                $('#datetimepickerend').val('');
                end = new Date(Date.now());
                start = new Date(Date.now());
                start = new Date(start.setHours(end.getHours()-1));
                concretdatareceive();
                popupStatus = 1;
            }
        }
        
        function disablePopup(){
            if(popupStatus==1){
                $("#backgroundPopup").css({
                    "opacity": "1"
                });
                $("#popupContact").fadeOut("slow");
                popupStatus = 0;
            }
        }
        
        function centerPopup(){
            var windowWidth = document.documentElement.clientWidth;
            var windowHeight = document.documentElement.clientHeight;
            var popupHeight = $("#popupContact").height();
            var popupWidth = $("#popupContact").width();
            $("#popupContact").css({
                "position": "absolute",
                "top": windowHeight/2-popupHeight/2,
                "left": windowWidth/2-popupWidth/2
            });
        }
        function concretdatareceive() {
                $('#lost')[0].value = '';
                $.post('api',{ data: ['log', conchost, Date.parse(window.start), Date.parse(window.end)] }, function( data ) {
                    $.each ( data, function( key, val ) {
                        $.each(val, function( keyp, valp) {
                            if ( valp[1] == 0 ) {
                                count ++;
                                dt = new Date(valp[0]-3*3600*1000);
                                times.push(dt.getFullYear()+'-'+(dt.getMonth()+1)+'-'+dt.getDate()+' '+dt.getHours()+':'+dt.getMinutes()+':'+dt.getSeconds());
                            }
                        });
                        $('#lost')[0].value = times.join('\n');
                        $('#container').highcharts({
                            chart: {
                                zoomType: 'x'
                            },
                            title: {
                                text: key
                            },
                            xAxis: {
                                type: 'datetime'
                            },
                            yAxis: {
                                min: 0,
                                title: {
                                    text: 'Time'
                                }
                            },
                            legend: {
                                enabled: false
                            },
                            plotOptions: {
                                area: {
                                    fillColor: {
                                        linearGradient: {
                                            x1: 0,
                                            y1: 0,
                                            x2: 0,
                                            y2: 1
                                        },
                                        stops: [
                                            [0, Highcharts.Color('#46C4DD').setOpacity(0).get('rgba')],
                                            [1, '#46C4DD']
                                        ]
                                    },
                                    marker: {
                                        radius: 2
                                    },
                                    lineWidth: 1,
                                    lineColor: '#46C4DD',
                                    states: {
                                        hover: {
                                            lineWidth: 1
                                        }
                                    },
                                    threshold: null
                                }
                            },
                
                            series: [{
                                type: 'area',
                                name: 'Ping',
                                data: val
                            }]
                        });
                    });
                });
            }
            function datarecive() {
                    if (already!=' ') {
                        $.post( "api", { data: ["log50s"] }, function( data ) {
                            already = ' ';
                            var i = 0;
                            var ddiv = document.createElement('div');
                            ddiv.style.width = '360';
                            ddiv.style.height = '170';
                            ddiv.style.float = 'left';
                            ddiv.className = 'can';
                            $.each( data, function( key, val ) {
                                    ddiv.id = i;
                                    $('#desktop')[0].appendChild(ddiv.cloneNode(true));
                                    obj.push({key:val});
                                    mas[key] = obj[i].key;
                                    var pl = '#'+i;
                                    $.plot(pl, [{label:key,data:mas[key]}], { series: { color:["#00EE11","#00FF11"], lines: { fill: true, fillColor: { colors: [{ opacity: 0.5 },{ opacity: 0.1 }]} } }, xaxis: { mode: 'time', timeformat: '%H:%M:%S', tickSize: [1,'minute'] }});
                                    i++;
                            });
                            $('.can').click( function() { 
                                conchost = $(this).text().split(' ')[1];
                                centerPopup();
                                loadPopup();
                            });
                            obj = [];
                        });
                    }
                    else {
                        
                        $.post( "api", { data: ["plotget"] }, function( data ) {
                            var i = 0;
                            $.each( data, function( key, val ) {
                                if (val[1]!=0) {
                                    if (mas[key].length >= 50) {
                                        mas[key].splice(0,1);
                                    }
                                    obj.push({key:val});
                                    mas[key].push(obj[i].key);
                                    var pl = '#'+i;
                                    $.plot(pl, [{label:key,data:mas[key]}], { series: { color:["#00EE11","#00FF11"], lines: { fill: true, fillColor: { colors: [{ opacity: 0.5 },{ opacity: 0.1 }]} } }, xaxis: { mode: 'time', timeformat: '%H:%M:%S', tickSize: [1,'minute'] }} );
                                    i++;
                                }
                                else {
                                    if (mas[key].length >= 50) {
                                        mas[key].splice(0,1);
                                    }
                                    obj.push({key:val});
                                    mas[key].push(obj[i].key);
                                    var pl = '#'+i;
                                    $.plot(pl, [{label:key,data:mas[key]}], { series: { color:["#EE1100","#FF0000"], lines: { fill: true, fillColor: { colors: [{ opacity: 0.5 },{ opacity: 0.1 }]} } }, xaxis: { mode: 'time', timeformat: '%H:%M:%S', tickSize: [1,'minute'] }});
                                    i++;
                                }
                            });
                            obj = [];
                        });
                    }
                    setTimeout(datarecive, 5000);
            }
	    var mas = {};
	    var obj = [];
	    var already;
	    var itterator;
	    var count = 0;
        var times = [];
        $(".document").ready(function () {
            $("#button").click(function(){
                centerPopup();
                loadPopup();
            });
            $("#popupContactClose").click(function(){
                disablePopup();
                times = [];
            });
            $(document).keypress(function(e){
                if(e.keyCode==27 && popupStatus==1){
                    disablePopup();
                }
            });
            $('#lost').click( function() {
                var len = this.value.length;
                var curs = this.selectionStart;
                var strnum = 0;
                for (var tck = 0; tck <= len; tck = tck+21) {
                    if ( curs >= tck && curs < tck+21 ) {
                        start = new Date(Date.parse(times[strnum])-60*1000);
                        end = new Date(Date.parse(times[strnum])+60*1000);
                        times = [];
                        concretdatareceive();
                        break;
                    }
                    strnum ++;
                }                            
            });
            end = new Date(Date.now());
            start = new Date(Date.now());
            start = new Date(start.setHours(end.getHours()-1));
            $('#show').click(function() {
                start = new Date(Date.parse($('#datetimepickerstart').val()))
                end = new Date(Date.parse($('#datetimepickerend').val()))
                var fl = 1;
                if (end == 'Invalid Date') {
                    if (start != 'Invalid Date') {
                        end = new Date(Date.parse($('#datetimepickerstart').val()))
                        end = new Date(end.setHours(start.getHours()+1));
                    }
                    else {
                        end = new Date(Date.now());
                        fl = 0;
                    }
                }
                if (start == 'Invalid Date') {
                    if (fl == 0) {
                        start = new Date(Date.now());
                        start = new Date(start.setHours(end.getHours()-1));
                        fl = 1;
                    }
                    else {
                        start = new Date(Date.parse($('#datetimepickerend').val()))
                        start = new Date(start.setHours(end.getHours()-1));
                    }
                }
                concretdatareceive();
            });

	    datarecive();
        });

	});
</script>

</head>
<body>
<div id='backgroundPopup'>
<div style='width:100%;height:600px' id='desktop'>
<div style='width:100%;height:20px;text-align:center'><a href='listedit'>Hosts list editor</a> | <a href='config'>Config</a> | <a href='./'>Graphs</a></div>
</div>
</div>
<div id="popupContact" style="display: none; border: solid 1px black">
<div>
<div id="container" style="height: 500px; width: 1000px; float: left;"></div>
<div style="height: 500px; width:250px; float: left; background-color: #FFFFFF;">
<div style="position: absolute;top:10px">Start time:<input id="datetimepickerstart" type="text"></div>
<div style="position: absolute;top:35px">End time: <input id="datetimepickerend" type="text"></div>
<div style="position: absolute;top:60px"><input id='show' type='button' value='Show'> <button id="popupContactClose">X</button></div>
<div style="position: absolute;top:100px"><textarea id='lost' rows='25' cols='27'></textarea></div>
</div>
</div>
</div>
</body>
</html>